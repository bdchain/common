// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

/*
Package common is a generated protocol buffer package.

It is generated from these files:
	common.proto

It has these top-level messages:
	Empty
	AccessPerms
	Result
	SimpleResp
*/
package common

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/protoc-gen-go/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 权限枚举
type Perm int32

const (
	// 无权限
	Perm_NONE Perm = 0
	// 可读
	Perm_READ Perm = 1
	// 可写
	Perm_WRITE Perm = 2
	// 可读可写
	Perm_BOTH Perm = 3
)

var Perm_name = map[int32]string{
	0: "NONE",
	1: "READ",
	2: "WRITE",
	3: "BOTH",
}
var Perm_value = map[string]int32{
	"NONE":  0,
	"READ":  1,
	"WRITE": 2,
	"BOTH":  3,
}

func (x Perm) String() string {
	return proto.EnumName(Perm_name, int32(x))
}
func (Perm) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// 空结构
type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type AccessPerms struct {
	// 账号 id
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// client id
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	// 权限信息
	Perms map[string]Perm `protobuf:"bytes,3,rep,name=perms" json:"perms,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value,enum=common.Perm"`
}

func (m *AccessPerms) Reset()                    { *m = AccessPerms{} }
func (m *AccessPerms) String() string            { return proto.CompactTextString(m) }
func (*AccessPerms) ProtoMessage()               {}
func (*AccessPerms) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AccessPerms) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *AccessPerms) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *AccessPerms) GetPerms() map[string]Perm {
	if m != nil {
		return m.Perms
	}
	return nil
}

// API 请求结果
type Result struct {
	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	// 返回信息
	Msg string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
}

func (m *Result) Reset()                    { *m = Result{} }
func (m *Result) String() string            { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()               {}
func (*Result) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Result) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Result) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

// 仅包含 API 请求结果的简单 Response
type SimpleResp struct {
	Res *Result `protobuf:"bytes,1,opt,name=res" json:"res,omitempty"`
}

func (m *SimpleResp) Reset()                    { *m = SimpleResp{} }
func (m *SimpleResp) String() string            { return proto.CompactTextString(m) }
func (*SimpleResp) ProtoMessage()               {}
func (*SimpleResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *SimpleResp) GetRes() *Result {
	if m != nil {
		return m.Res
	}
	return nil
}

var E_ApiPrefix = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.ServiceOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         50001,
	Name:          "common.api_prefix",
	Tag:           "bytes,50001,opt,name=api_prefix,json=apiPrefix",
	Filename:      "common.proto",
}

var E_ApiVersion = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.ServiceOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         50002,
	Name:          "common.api_version",
	Tag:           "bytes,50002,opt,name=api_version,json=apiVersion",
	Filename:      "common.proto",
}

var E_GrantScope = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MethodOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         51001,
	Name:          "common.grant_scope",
	Tag:           "bytes,51001,opt,name=grant_scope,json=grantScope",
	Filename:      "common.proto",
}

var E_GrantPerm = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MethodOptions)(nil),
	ExtensionType: (*Perm)(nil),
	Field:         51002,
	Name:          "common.grant_perm",
	Tag:           "varint,51002,opt,name=grant_perm,json=grantPerm,enum=common.Perm",
	Filename:      "common.proto",
}

var E_FieldRequired = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         52001,
	Name:          "common.field_required",
	Tag:           "varint,52001,opt,name=field_required,json=fieldRequired",
	Filename:      "common.proto",
}

func init() {
	proto.RegisterType((*Empty)(nil), "common.Empty")
	proto.RegisterType((*AccessPerms)(nil), "common.AccessPerms")
	proto.RegisterType((*Result)(nil), "common.Result")
	proto.RegisterType((*SimpleResp)(nil), "common.SimpleResp")
	proto.RegisterEnum("common.Perm", Perm_name, Perm_value)
	proto.RegisterExtension(E_ApiPrefix)
	proto.RegisterExtension(E_ApiVersion)
	proto.RegisterExtension(E_GrantScope)
	proto.RegisterExtension(E_GrantPerm)
	proto.RegisterExtension(E_FieldRequired)
}

func init() { proto.RegisterFile("common.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 459 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x86, 0x49, 0x1c, 0x87, 0x66, 0x5c, 0x22, 0x6b, 0x25, 0xa4, 0xa8, 0x52, 0x4b, 0xe4, 0x53,
	0xc5, 0xc1, 0x91, 0x02, 0x07, 0xe4, 0x13, 0xa9, 0x70, 0x44, 0x0e, 0x6d, 0xaa, 0x4d, 0x05, 0x47,
	0xcb, 0xb5, 0x27, 0x61, 0x85, 0xed, 0x5d, 0x76, 0xd7, 0x11, 0x79, 0x01, 0x8e, 0x1c, 0xb9, 0xf3,
	0x18, 0x70, 0xe3, 0x11, 0xe0, 0x89, 0xd0, 0xae, 0x6d, 0x81, 0xda, 0x43, 0x2f, 0xd6, 0xbf, 0x33,
	0xf3, 0x7f, 0xff, 0xc8, 0x03, 0xc7, 0x19, 0x2f, 0x4b, 0x5e, 0x85, 0x42, 0x72, 0xcd, 0xc9, 0xb0,
	0x79, 0x9d, 0x4c, 0x77, 0x9c, 0xef, 0x0a, 0x9c, 0xd9, 0xea, 0x6d, 0xbd, 0x9d, 0xe5, 0xa8, 0x32,
	0xc9, 0x84, 0xe6, 0xb2, 0x99, 0x0c, 0x1e, 0x83, 0x1b, 0x97, 0x42, 0x1f, 0x82, 0x5f, 0x3d, 0xf0,
	0x16, 0x59, 0x86, 0x4a, 0x5d, 0xa3, 0x2c, 0x15, 0x39, 0x05, 0x48, 0xb3, 0x8c, 0xd7, 0x95, 0x4e,
	0x58, 0x3e, 0xe9, 0x4d, 0x7b, 0xe7, 0x23, 0x3a, 0x6a, 0x2b, 0xab, 0x9c, 0x3c, 0x85, 0x61, 0x2a,
	0x84, 0x69, 0xf5, 0x6d, 0xcb, 0x4d, 0x85, 0x58, 0xe5, 0xe4, 0x25, 0xb8, 0xc2, 0xd8, 0x27, 0xce,
	0xd4, 0x39, 0xf7, 0xe6, 0x67, 0x61, 0xbb, 0xd6, 0x7f, 0xe4, 0xd0, 0x7e, 0xe3, 0x4a, 0xcb, 0x03,
	0x6d, 0x86, 0x4f, 0x96, 0x00, 0xff, 0x8a, 0xc4, 0x07, 0xe7, 0x23, 0x1e, 0xda, 0x48, 0x23, 0x49,
	0x00, 0xee, 0x3e, 0x2d, 0x6a, 0xb4, 0x59, 0xe3, 0xf9, 0x71, 0x47, 0x35, 0x26, 0xda, 0xb4, 0xa2,
	0xfe, 0xab, 0x5e, 0x10, 0xc2, 0x90, 0xa2, 0xaa, 0x0b, 0x4d, 0x08, 0x0c, 0x32, 0x9e, 0xa3, 0x85,
	0xb8, 0xd4, 0x6a, 0xc3, 0x2d, 0xd5, 0xae, 0xdd, 0xd7, 0xc8, 0x20, 0x04, 0xd8, 0xb0, 0x52, 0x14,
	0x48, 0x51, 0x09, 0x32, 0x05, 0x47, 0xa2, 0xb2, 0x16, 0x6f, 0x3e, 0xee, 0x32, 0x1a, 0x20, 0x35,
	0xad, 0xe7, 0x33, 0x18, 0x98, 0x48, 0x72, 0x04, 0x83, 0xab, 0xf5, 0x55, 0xec, 0x3f, 0x32, 0x8a,
	0xc6, 0x8b, 0x37, 0x7e, 0x8f, 0x8c, 0xc0, 0x7d, 0x4f, 0x57, 0x37, 0xb1, 0xdf, 0x37, 0xc5, 0x8b,
	0xf5, 0xcd, 0x5b, 0xdf, 0x89, 0x5e, 0x03, 0xa4, 0x82, 0x25, 0x42, 0xe2, 0x96, 0x7d, 0x26, 0xcf,
	0xc2, 0xe6, 0x1c, 0x61, 0x77, 0x8e, 0x70, 0x83, 0x72, 0xcf, 0x32, 0x5c, 0x0b, 0xcd, 0x78, 0xa5,
	0x26, 0xbf, 0xbf, 0x38, 0xed, 0x7f, 0x16, 0xec, 0xda, 0x7a, 0xa2, 0x0b, 0xf0, 0x0c, 0x61, 0x8f,
	0x52, 0x31, 0x5e, 0x3d, 0x8c, 0xf8, 0xd3, 0x22, 0x4c, 0xee, 0xbb, 0xc6, 0x14, 0x2d, 0xc0, 0xdb,
	0xc9, 0xb4, 0xd2, 0x89, 0xca, 0xb8, 0x40, 0x72, 0x76, 0x8f, 0x71, 0x89, 0xfa, 0x03, 0xcf, 0x3b,
	0xc4, 0x8f, 0xaf, 0x2d, 0xc2, 0x9a, 0x36, 0xc6, 0x13, 0x5d, 0x42, 0xf3, 0x4a, 0xcc, 0xc1, 0x1e,
	0x24, 0xfc, 0xb4, 0x84, 0xbb, 0x87, 0x1a, 0x59, 0x82, 0x91, 0xd1, 0x12, 0xc6, 0x5b, 0x86, 0x45,
	0x9e, 0x48, 0xfc, 0x54, 0x33, 0x89, 0x39, 0x39, 0xbd, 0x87, 0x5c, 0x9a, 0x81, 0x8e, 0xf8, 0xfd,
	0x9b, 0x21, 0x1e, 0xd1, 0x27, 0xd6, 0x46, 0x5b, 0xd7, 0xed, 0xd0, 0x4e, 0xbf, 0xf8, 0x1b, 0x00,
	0x00, 0xff, 0xff, 0x9a, 0x1c, 0xb9, 0xc8, 0xfe, 0x02, 0x00, 0x00,
}
